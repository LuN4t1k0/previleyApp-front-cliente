
import { useMemo } from 'react';
import cloneDeep from 'lodash.clonedeep';

const useDynamicActions = (config, isEnabled) => {
  return useMemo(() => {
    if (!config || !config.columnsConfig) {
      return config;
    }

    const newConfig = cloneDeep(config);

    // --- PRUEBA DEFINITIVA ---
    // 1. VAMOS A VER EL ARRAY EXACTO QUE EST√Å SIENDO REVISADO
    console.log("%cüîç Array a buscar:", 'color: blue; font-weight: bold;', newConfig.columnsConfig);

    const actionsColumn = newConfig.columnsConfig.find(col => col.type === 'actions');

    // 2. VAMOS A VER EL RESULTADO EXACTO DE LA B√öSQUEDA
    console.log("%cüéØ Resultado de la b√∫squeda (.find):", 'color: blue; font-weight: bold;', actionsColumn);
    // --- FIN DE LA PRUEBA ---

    if (!actionsColumn || !actionsColumn.actions) {
      console.error("‚ùå B√∫squeda fallida. No se encontr√≥ una columna con type: 'actions'. El hook se detendr√°.");
      return newConfig;
    }

    actionsColumn.actions.forEach((action) => {
      const originalVisibleWhen = action.visibleWhen;
      action.visibleWhen = (rowData) => {
        const decisionGeneral = isEnabled;
        const decisionDeFila = originalVisibleWhen ? originalVisibleWhen(rowData) : true;
        const decisionFinal = decisionGeneral && decisionDeFila;

        if (action.id === 'editar') {
          console.log(
            `%cüî¨ Analizando Visibilidad (Fila ID: ${rowData.id}) üî¨`,
            'color: white; background-color: #28a745; padding: 4px; border-radius: 4px;',
            {
              "Decisi√≥n General (isEnabled)": decisionGeneral,
              "Estado de esta Fila (licencia)": rowData.estadoLicencia,
              "Estado de esta Fila (gen√©rico)": rowData.estado,
              "Decisi√≥n de Fila (visibleWhen)": decisionDeFila,
              "DECISI√ìN FINAL ‚û°Ô∏è": decisionFinal ? "MOSTRAR ‚úÖ" : "OCULTAR ‚ùå",
            }
          );
        }
        
        return decisionFinal;
      };
    });

    return newConfig;
  }, [config, isEnabled]);
};

export default useDynamicActions;